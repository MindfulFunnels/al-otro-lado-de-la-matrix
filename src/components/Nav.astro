---
import CTAButton from "./CTAButton.astro";
const navItems = [
  { label: "Problema", href: "#problem" },
  { label: "Transformación", href: "#transformation" },
  { label: "Camino", href: "#camino" },
  { label: "Evento", href: "#live-event" },
  { label: "Sobre Mí", href: "#about" },
  { label: "Testimonios", href: "#testimonials" },
  { label: "FAQ", href: "#faq" },
];
---

<div class="fixed top-0 left-0 right-0 z-[9999] pointer-events-none">
  <nav
    class="w-full pointer-events-auto transition-all duration-300 backdrop-blur-md bg-oxford-blue-3/20 hover:bg-oxford-blue-3/90"
  >
    <div class="container mx-auto px-4">
      <div class="flex items-center justify-between h-16">
        <div class="hidden lg:flex items-center justify-center flex-1">
          <a href="#hero" class="mr-8">
            <img
              src="/logo.png"
              alt="Al otro lado de la Matrix"
              class="h-12 w-auto"
            />
          </a>
          {
            navItems.map((item, index) => (
              <>
                <a
                  href={item.href}
                  class="text-white/60 hover:text-white transition-colors duration-300 text-xs uppercase tracking-wider"
                >
                  {item.label}
                </a>
                {index < navItems.length - 1 && (
                  <span class="mx-3 text-true-blue/40 text-xs">
                    <svg class="w-1 h-1" viewBox="0 0 6 6" fill="currentColor">
                      <circle cx="3" cy="3" r="3" />
                    </svg>
                  </span>
                )}
              </>
            ))
          }
          <CTAButton href="#final-cta" label="Unirme" class="mx-3" />
        </div>

        <div class="lg:hidden flex items-center justify-between flex-1 gap-4">
          <a href="#hero" class="flex items-center">
            <img
              src="/logo.png"
              alt="Al otro lado de la Matrix"
              class="h-12 w-auto"
            />
          </a>
          <div class="flex items-center gap-4">
            <CTAButton href="#final-cta" label="Unirme" variant="secondary" />
            <button
              class="text-white/90 hover:text-white transition-colors duration-300"
              id="mobile-menu-button"
              aria-label="Menú"
            >
              <svg
                class="w-8 h-8"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <div
        class="lg:hidden hidden transition-all duration-300 py-4"
        id="mobile-menu"
      >
        <div class="flex flex-col space-y-4">
          {
            navItems.map((item) => (
              <a
                href={item.href}
                class="text-white/60 hover:text-white transition-colors duration-300 text-xs uppercase tracking-wider px-4"
              >
                {item.label}
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </nav>
</div>

<div class="h-16"></div>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");

  mobileMenuButton?.addEventListener("click", (e) => {
    e.stopPropagation();
    mobileMenu?.classList.toggle("hidden");
  });

  mobileMenu?.querySelectorAll("a").forEach((link) => {
    link.addEventListener("click", () => mobileMenu?.classList.add("hidden"));
  });

  document.addEventListener("click", (e) => {
    if (!mobileMenu?.classList.contains("hidden")) {
      const isClickInsideMenu = mobileMenu?.contains(e.target as Node);
      const isClickOnButton = mobileMenuButton?.contains(e.target as Node);
      if (!isClickInsideMenu && !isClickOnButton)
        mobileMenu?.classList.add("hidden");
    }
  });
</script>

<style>
  @media (max-width: 1024px) {
    #mobile-menu {
      background: linear-gradient(
        to bottom,
        var(--color-oxford-blue-3/95),
        var(--color-oxford-blue-2/95)
      );
      backdrop-filter: blur(12px);
      border-bottom-left-radius: 1rem;
      border-bottom-right-radius: 1rem;
      box-shadow:
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
  }
</style>
